// Generated by CoffeeScript 2.2.3
(function() {
  var ComputePersonal, buildModels, db, should;

  should = require('should');

  db = require('./../src/server/models/db');

  buildModels = require('./../src/server/models/BuildModels');

  ComputePersonal = require('./../src/server/models/ComputePersonal');

  if (process.env.MASONS_ENV === 'TEST') {
    describe('ComputePersonal', function() {
      return describe('Games at Masons Masters', function() {
        beforeEach(async function() {
          var err, paper1, paper2, paper3;
          try {
            await db.sequelize.sync({
              force: true
            });
          } catch (error) {
            err = error;
            console.error(err);
            should.not.exist(err);
          }
          paper1 = require('./TestGame').masonsMasters[0];
          paper2 = require('./TestGame').masonsMasters[1];
          paper3 = require('./TestGame').masonsMasters[2];
          await buildModels(paper1);
          await buildModels(paper2);
          return (await buildModels(paper3));
        });
        it('should show that Кошка 1 time was killed by day being the mafia', async function() {
          var p;
          p = (await ComputePersonal("Кошка"));
          return p.firstKilledDayMafia.should.be.eql(1);
        });
        it('should show that Малика has loses 1 time being the mafia', async function() {
          var profile;
          profile = (await ComputePersonal("Малика"));
          profile.gamesMafia.should.be.eql(1);
          return profile.winsMafia.should.be.eql(0);
        });
        return it('should show that kors has win-loss equal to 1', async function() {
          var profile;
          profile = (await ComputePersonal("kors"));
          profile.efficiency[2].winsMinusLosses.should.be.eql(1);
          profile.efficiency[0].gameResult.should.be.eql(-1);
          profile.efficiency[1].gameResult.should.be.eql(1);
          return profile.efficiency[2].gameResult.should.be.eql(1);
        });
      });
    });
  }

}).call(this);
