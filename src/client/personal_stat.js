// Generated by CoffeeScript 1.4.0
(function() {

  $(function() {
    var fetchedNames;
    fetchedNames = new Bloodhound({
      datumTokenizer: function(item) {
        return Bloodhound.tokenizers.whitespace(item.name);
      },
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      limit: 10,
      prefetch: {
        url: '/players',
        filter: function(list) {
          return $.map(list, function(record) {
            return {
              name: record
            };
          });
        }
      }
    });
    fetchedNames.initialize();
    $("input[name='player-name']").typeahead(null, {
      displayKey: 'name',
      source: fetchedNames.ttAdapter()
    });
    $(".twitter-typeahead").css('display', 'block');
    return $("input[name='find-button']").bind('click', function(event, ui) {
      var playerName, request;
      event.preventDefault();
      playerName = $("input[name='player-name']").val();
      request = {
        url: "/personal/" + playerName,
        dataType: 'json',
        beforeSend: function() {
          $('.statistics').hide();
          return $('.loader').show();
        },
        success: function(data) {
          $(".player-name").removeClass("has-error");
          $("input[name='player-name']").tooltip('destroy');
          renderFeatures(data);
          renderTable(data);
          renderWinsPlot(data);
          return $('.statistics').show();
        },
        error: function(jqXHR, textStatus) {
          if (textStatus === "error") {
            $(".player-name").addClass("has-error");
            return $("input[name='player-name']").tooltip({
              placement: "auto",
              title: "Игрок не найден",
              trigger: "focus"
            }).tooltip('show');
          }
        },
        complete: function() {
          return $('.loader').hide();
        }
      };
      return $.ajax(request);
    });
  });

}).call(this);
